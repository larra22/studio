// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Recommends focus music based on user preferences.
 *
 * - getFocusMusicRecommendations - A function that provides focus music recommendations.
 * - FocusMusicRecommendationsInput - The input type for the getFocusMusicRecommendations function.
 * - FocusMusicRecommendationsOutput - The return type for the getFocusMusicRecommendations function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const FocusMusicRecommendationsInputSchema = z.object({
  musicPreferences: z
    .string()
    .describe(
      'The user preferences for music, including genres, artists, or moods.'
    ),
});
export type FocusMusicRecommendationsInput = z.infer<
  typeof FocusMusicRecommendationsInputSchema
>;

const FocusMusicRecommendationsOutputSchema = z.object({
  recommendations: z
    .array(z.string())
    .describe('A list of focus music recommendations.'),
});
export type FocusMusicRecommendationsOutput = z.infer<
  typeof FocusMusicRecommendationsOutputSchema
>;

export async function getFocusMusicRecommendations(
  input: FocusMusicRecommendationsInput
): Promise<FocusMusicRecommendationsOutput> {
  return focusMusicRecommendationsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'focusMusicRecommendationsPrompt',
  input: {schema: FocusMusicRecommendationsInputSchema},
  output: {schema: FocusMusicRecommendationsOutputSchema},
  prompt: `You are a music expert. Recommend focus music based on the user's preferences.

Preferences: {{{musicPreferences}}}

Return a list of songs or playlists.
`,
});

const focusMusicRecommendationsFlow = ai.defineFlow(
  {
    name: 'focusMusicRecommendationsFlow',
    inputSchema: FocusMusicRecommendationsInputSchema,
    outputSchema: FocusMusicRecommendationsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
